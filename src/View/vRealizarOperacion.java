/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2017 Oracle and/or its affiliates. All rights reserved.
 *
 * Oracle and Java are registered trademarks of Oracle and/or its affiliates.
 * Other names may be trademarks of their respective owners.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common
 * Development and Distribution License("CDDL") (collectively, the
 * "License"). You may not use this file except in compliance with the
 * License. You can obtain a copy of the License at
 * http://www.netbeans.org/cddl-gplv2.html
 * or nbbuild/licenses/CDDL-GPL-2-CP. See the License for the
LA PUTA MADRE JAVII
 * specific language governing permissions and limitations under the
 * License.  When distributing the software, include this License Header
 * Notice in each file and include the License file at
 * nbbuild/licenses/CDDL-GPL-2-CP.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the GPL Version 2 section of the License file that
 * accompanied this code. If applicable, add the following below the
 * License Header, with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * If you wish your version of this file to be governed by only the CDDL
 * or only the GPL Version 2, indicate your decision by adding
 * "[Contributor] elects to include this software in this distribution
 * under the [CDDL or GPL Version 2] license." If you do not indicate a
 * single choice of license, a recipient has the option to distribute
 * your version of this file under either the CDDL, the GPL Version 2 or
 * to extend the choice of license to its licensees as provided above.
 * However, if you add GPL Version 2 code and therefore, elected the GPL
 * Version 2 license, then the option applies only if the new code is
 * made subject to such option by the copyright holder.
 *
 * Contributor(s):
 */
package View;

import bannet.Bannet;
import Model.Movimientos;
import Model.Usuario;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author krawz
 */
public class vRealizarOperacion extends javax.swing.JFrame {

    private int tipo_Mov;
    private String s_Mov;
    private static final String FORMATO_CANTIDAD = "^[1-9]\\d{0,10}(.)?(\\d{1,2})?$";
    private static final String PATRON_CORREO = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@" + "[A-Za-z0-9-]+" + "(\\.[A-Za-z0-9]+)*" + "(\\.[A-Za-z]{2,})$";
    DecimalFormat formatoNumero = new DecimalFormat("##########.00");
    DecimalFormat formatoVista = new DecimalFormat("#,##0.00");
    private double cantidad = 0.0;
    private Point mouseDownCompCoords = null;

    /**
     * Creates new form vRealizarOperacion
     */
    public vRealizarOperacion(int movimiento) {
        setUndecorated(true);
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);
        tipo_Mov = movimiento;
        switch (movimiento) {
            case 0:
                s_Mov = "Retiro";
                lblCorreo.setVisible(false);
                txtCorreo.setVisible(false);
                break;
            case 1:
                s_Mov = "Depósito";
                lblCorreo.setVisible(false);
                txtCorreo.setVisible(false);
                break;
            case 2:
                s_Mov = "Transferencia";
        }
        lblMovimiento.setText(s_Mov);
        btnAccion.setText("Realizar " + s_Mov);
        lblSaldo.setText("Saldo actual: $" + formatoVista.format(Bannet.usuarioActivo.getSaldoActual()) + " MXN");

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblMovimiento = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtCantidad = new javax.swing.JTextField();
        btnAccion = new javax.swing.JButton();
        lblSaldo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnAccion1 = new javax.swing.JButton();
        txtCorreo = new javax.swing.JTextField();
        lblCorreo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(55, 55, 55));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel1MouseReleased(evt);
            }
        });

        lblMovimiento.setBackground(new java.awt.Color(39, 137, 220));
        lblMovimiento.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMovimiento.setForeground(new java.awt.Color(255, 255, 255));
        lblMovimiento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMovimiento.setText("Movimiento");
        lblMovimiento.setFocusable(false);
        lblMovimiento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblMovimiento.setOpaque(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cantidad:");
        jLabel1.setAlignmentX(0.5F);

        txtCantidad.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCantidadKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCantidadKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadKeyTyped(evt);
            }
        });

        btnAccion.setBackground(new java.awt.Color(39, 137, 220));
        btnAccion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAccion.setForeground(new java.awt.Color(255, 255, 255));
        btnAccion.setText("Realizar Acción");
        btnAccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccionActionPerformed(evt);
            }
        });

        lblSaldo.setBackground(new java.awt.Color(51, 51, 255));
        lblSaldo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblSaldo.setForeground(new java.awt.Color(255, 255, 255));
        lblSaldo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblSaldo.setText("Saldo actual: ");
        lblSaldo.setOpaque(true);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("$");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("MXN");

        btnAccion1.setBackground(new java.awt.Color(204, 0, 51));
        btnAccion1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAccion1.setForeground(new java.awt.Color(255, 255, 255));
        btnAccion1.setText("Cancelar");
        btnAccion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAccion1ActionPerformed(evt);
            }
        });

        txtCorreo.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        txtCorreo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCorreoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCorreoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoKeyTyped(evt);
            }
        });

        lblCorreo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblCorreo.setForeground(new java.awt.Color(255, 255, 255));
        lblCorreo.setText("Correo:");
        lblCorreo.setAlignmentX(0.5F);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblMovimiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblSaldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAccion1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAccion, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4))
                            .addComponent(lblCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblMovimiento)
                .addGap(25, 25, 25)
                .addComponent(lblCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(29, 29, 29)
                .addComponent(btnAccion, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAccion1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(lblSaldo))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrar() {
        dispose();
        vOperaciones d = new vOperaciones();
        d.setVisible(true);
    }

    boolean evaluar() {
        try {
            if (txtCorreo.getText().isEmpty() && tipo_Mov == 2) {
            lblCorreo.setForeground(Color.red);
            return false;
        } else {
            if (!txtCorreo.getText().matches(PATRON_CORREO) && tipo_Mov == 2) {
                lblCorreo.setForeground(Color.red);
                JOptionPane.showMessageDialog(null, "El email no es válido",
                    "Error", JOptionPane.ERROR_MESSAGE);
                return false;
            } else {
                lblCorreo.setForeground(Color.white);
            }
        }
            if (txtCantidad.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Ingrese la cantidad");
                return false;
            } else {

                System.out.println("Cantidad: " + formatoNumero.format(Double.valueOf(txtCantidad.getText())));
                cantidad = Double.valueOf(formatoNumero.format(Double.valueOf(txtCantidad.getText())));
                txtCantidad.setText(formatoNumero.format(Double.valueOf(txtCantidad.getText())));

                if ((tipo_Mov == 0 || tipo_Mov == 2) && Bannet.usuarioActivo.obtenerSaldo() < cantidad) {

                    System.err.println("Saldo actual: " + Bannet.usuarioActivo.obtenerSaldo() + "\n"
                            + "Saldo requerido: " + cantidad);

                    JOptionPane.showMessageDialog(null, "Saldo insuficiente");
                    return false;
                } else {
                    if (cantidad < 1) {
                        JOptionPane.showMessageDialog(null, "Ingrese una cantidad mayor a $1.00");
                        return false;
                    } else {
                        if (!txtCantidad.getText().matches(FORMATO_CANTIDAD)) {
                            JOptionPane.showMessageDialog(null, "Cantidad inválida");
                            return false;
                        }
                    }
                }
            }
        } catch (SQLException | NumberFormatException ex) {
            System.out.println("Error: " + ex.getMessage());
        }
        return true;
    }

    private void txtCantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadKeyPressed

    private void txtCantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyReleased
        // TODO add your handling code here:
        if (!txtCantidad.getText().isEmpty()) {
            if (txtCantidad.getText().charAt(0) == '0') {
                evt.consume();
                getToolkit().beep();
                txtCantidad.setText(txtCantidad.getText().substring(1, txtCantidad.getText().length()));
            }
            if (!txtCantidad.getText().matches(FORMATO_CANTIDAD)) {
                evt.consume();
                txtCantidad.setText(txtCantidad.getText().substring(0, txtCantidad.getText().indexOf('.') + 3));
                getToolkit().beep();
            }
        }
    }//GEN-LAST:event_txtCantidadKeyReleased

    private void txtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadKeyTyped
        // TODO add your handling code here:
        char numero = evt.getKeyChar();

        if (txtCantidad.getText().isEmpty() && (numero == '.' || numero == '0')) {
            evt.consume();
            getToolkit().beep();
        }

        if (!Character.isDigit(numero) && numero != KeyEvent.VK_BACK_SPACE && numero != KeyEvent.VK_DELETE && numero != '.') {
            evt.consume();
            getToolkit().beep();
        }

        if (txtCantidad.getText().contains(".")) {
            if (numero == '.') {
                evt.consume();
                getToolkit().beep();
            }
        } else {
            if (txtCantidad.getText().length() >= 8 && numero != '.') {
                evt.consume();
            }
        }
    }//GEN-LAST:event_txtCantidadKeyTyped

    private void btnAccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccionActionPerformed
        // TODO add your handling code here:
        lblSaldo.setText("Saldo actual: $" + formatoVista.format(Bannet.usuarioActivo.getSaldoActual()) + " MXN");
        if (evaluar()) {
            String mensaje = "Se realizará un " + s_Mov.toLowerCase() + " de $" + formatoVista.format(cantidad) + " MXN, ¿está de acuerdo?";
            if (JOptionPane.showConfirmDialog(null, mensaje, "Confirmar",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                // Saving code here
                Movimientos mov = new Model.Movimientos();
                mov.setID_usuario(Bannet.usuarioActivo.getId());
                mov.setCantidad(cantidad);
                mov.setTipo(s_Mov);
                try {
                    if (tipo_Mov == 0 || tipo_Mov == 2) {
                        if (tipo_Mov == 0) {
                            mov.setConcepto("Retiro");
                        } else {
                            mov.setConcepto("Transacción a " + txtCorreo.getText());
                        }
                        mov.setSaldoRes(Bannet.usuarioActivo.obtenerSaldo() - cantidad);

                    } else {
                        mov.setConcepto("Depósito");
                        mov.setSaldoRes(Bannet.usuarioActivo.obtenerSaldo() + cantidad);
                    }
                } catch (SQLException ex) {
                    System.err.println("Error: " + ex.getMessage());
                }

                try {
                    if (!mov.realizarMovimiento()) {
                        JOptionPane.showMessageDialog(null, "Ocurrió un error al intentar realizar el movimiento",
                                "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        switch (tipo_Mov) {
                            case 0:
                                Bannet.usuarioActivo.setSaldoActual(Bannet.usuarioActivo.obtenerSaldo() - cantidad);
                                Bannet.usuarioActivo.actualizarSaldo();

                                break;
                            case 1:
                                Bannet.usuarioActivo.setSaldoActual(Bannet.usuarioActivo.obtenerSaldo() + cantidad);
                                Bannet.usuarioActivo.actualizarSaldo();
                                break;
                            case 2:
                                try {
                                    Usuario usuario2 = Usuario.buscarPorEmail(txtCorreo.getText());
                                    if (usuario2 != null) {
                                        Bannet.usuarioActivo.setSaldoActual(Bannet.usuarioActivo.obtenerSaldo() - cantidad);
                                        Bannet.usuarioActivo.actualizarSaldo();
                                        Movimientos mov2 = new Model.Movimientos();
                                        mov2.setID_usuario(usuario2.getId());
                                        mov2.setCantidad(cantidad);
                                        mov2.setTipo(s_Mov);
                                        mov2.setConcepto("Transacción de " + Bannet.usuarioActivo.getCorreo());
                                        mov2.setSaldoRes(usuario2.obtenerSaldo() + cantidad);
                                        if (mov2.realizarMovimiento()) {
                                            usuario2.setSaldoActual(usuario2.getSaldoActual() + cantidad);
                                            usuario2.actualizarSaldo();
                                            cerrar();
                                        } else {
                                            JOptionPane.showMessageDialog(null, "La cuenta con el correo ingresado no existe",
                                                    "Error", JOptionPane.ERROR_MESSAGE);
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(null, "La cuenta con el correo ingresado no existe",
                                                "Error", JOptionPane.ERROR_MESSAGE);
                                        throw new SQLException("Error: Email no encontrado");
                                    }
                                } catch (SQLException ex) {
                                    System.err.println("Error: " + ex.getMessage());
                                }
                                break;
                        }
                        if (tipo_Mov != 2) {
                            txtCantidad.setText("");
                            lblSaldo.setText("Saldo actual: $" + formatoVista.format(Bannet.usuarioActivo.getSaldoActual()) + " MXN");
                            cerrar();
                        }
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Ocurrió un error al intentar realizar el movimiento",
                            "Error", JOptionPane.ERROR_MESSAGE);
                    System.err.println(ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnAccionActionPerformed

    private void btnAccion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAccion1ActionPerformed
        // TODO add your handling code here:
        cerrar();
    }//GEN-LAST:event_btnAccion1ActionPerformed

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        // TODO add your handling code here:
        mouseDownCompCoords = evt.getPoint();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
        // TODO add your handling code here:
        mouseDownCompCoords = null;
    }//GEN-LAST:event_jPanel1MouseReleased

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        // TODO add your handling code here:
        Point currCoords = evt.getLocationOnScreen();
        setLocation(currCoords.x - mouseDownCompCoords.x, currCoords.y - mouseDownCompCoords.y);
    }//GEN-LAST:event_jPanel1MouseDragged

    private void txtCorreoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoKeyPressed

    private void txtCorreoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoKeyReleased

    private void txtCorreoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCorreoKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vRealizarOperacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vRealizarOperacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vRealizarOperacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vRealizarOperacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new vRealizarOperacion("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccion;
    private javax.swing.JButton btnAccion1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblMovimiento;
    private javax.swing.JLabel lblSaldo;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtCorreo;
    // End of variables declaration//GEN-END:variables
}
